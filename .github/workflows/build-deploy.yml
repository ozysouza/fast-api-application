name: Build and Deploy Fast API Code
run-name: ${{ github.actor }} is creating a deploy for the fast api project. ðŸš€
on:
  - push
  - pull_request
jobs:
  build:
    environment:
      name: Testing
    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Pull git repository
        uses: actions/checkout@v2
      - name: Install Python version 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests with Pytest
        run: |
          pip install pytest
          pytest -v -s --disable-warnings

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fast-api:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fast-api:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fast-api:buildcache,mode=max
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    environment:
      name: Production
    steps:
      - name: Deploy Fast API application to AWS Instance
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.KEY }}
          password: ${{ secrets.PROD_PASSWORD }}
          script: |
            echo ${{ secrets.PROD_PASSWORD }} | su -S - ${{ secrets.LINUX_USERNAME }}
            cd app/src
            git pull
            echo ${{ secrets.PROD_PASSWORD }} | sudo -S systemctl restart fastapi
